#include "TFile.h"
#include "TH1D.h"

#include <algorithm>
#include <array>

template<std::size_t N>
constexpr auto MakeBins(const std::array<double, N>& x) -> std::array<double, N + 1> {
    assert(std::is_sorted(x.cbegin(), x.cend()));
    std::array<double, N + 1> bin;
    bin[0] = x[0] - (x[1] - x[0]) / 2;
    for (std::size_t i{0}; i < N; ++i) {
        bin[i + 1] = x[i] + (x[i] - bin[i]);
    }
    return bin;
}

template<std::size_t N>
auto MakeHistogram(const char* name, const char* title, const std::array<double, N>& x, const std::array<double, N>& y) -> TH1D* {
    assert(std::is_sorted(x.cbegin(), x.cend()));
    const auto bins{MakeBins(x)};
    const auto h{new TH1D(name, title, x.size(), bins.data())};
    for (int i{1}; i <= x.size(); ++i) {
        h->SetBinContent(i, y[i - 1]);
    }
    h->Draw();
    return h;
}

auto CreateEnergySpectrum() -> int {
    if (not TFile::Open("AMS_energy_spectrum.root", "NEW")) {
        return 1;
    }

    constexpr std::array protonX{490.7038824759119, 615.8058004629536, 759.0701774068848, 930.0894259227024, 1099.499990480629, 1299.767737782423, 1518.2578114486537, 1773.475918057234, 2046.9833741264458, 2334.600549089767, 2662.630186791915, 3000.670908381017, 3381.62841579315, 3810.9513144410607, 4269.19056752376, 4782.5297669820775, 5293.940681769546, 5930.498649509944, 6525.5515447748385, 7266.6457575784525, 7948.123863901521, 8745.620735016979, 9633.57277980443, 10600.183804130596, 11585.006632068511, 12605.688534696023, 13758.417123496924, 14999.290880599763, 16337.018638863225, 17809.033970966335, 19415.388601480787, 20966.68377221919, 22794.07358733416, 24805.25943595633, 26777.007464747676, 28957.1872141708, 31193.10628167493, 33846.677140728854, 36443.05117343832, 39410.23868608772, 42411.02351755091, 45780.44989993366, 49093.87289255613, 52907.57263580658, 57147.43350048743, 61510.865991791376, 66194.44264070653, 71234.63742322408, 76658.60405171957, 82495.56378372821, 88343.71078573844, 95536.64186653709, 102811.01815351016, 110099.33670072738, 119063.60743246802, 129389.19681840239, 138561.6542059268, 151316.63873656563, 165245.7549655386, 180457.0849717953, 199006.31388924824, 218391.1964013352, 244400.43975283552, 272172.468772354, 307581.59163900866, 351015.0835514671, 406504.31112786283, 475394.1403479128, 578148.8419261394, 717008.1287671548, 952255.6126039722, 1401524.0886158117};
    constexpr std::array protonY{5.2452282172085695e-06, 5.6498061912413584e-06, 5.207965545111787e-06, 4.6947060186479604e-06, 4.4774693915698596e-06, 4.001663828369755e-06, 3.5485119071527595e-06, 3.0285935475165564e-06, 2.609405392868247e-06, 2.2679257565094824e-06, 1.921057208649794e-06, 1.6456787595913958e-06, 1.380306091287718e-06, 1.140985975636034e-06, 9.388924101588991e-07, 7.641868889242378e-07, 6.338522373343874e-07, 5.032936359620517e-07, 4.1583239496985753e-07, 3.291009106515159e-07, 2.7175875895381975e-07, 2.1886594812235523e-07, 1.7471357570165505e-07, 1.3947486660904587e-07, 1.1288062802411415e-07, 9.183116813521019e-08, 7.391691335680343e-08, 5.967063382251268e-08, 4.7978399818451395e-08, 3.847380036972105e-08, 3.0801394456489037e-08, 2.5216846641899577e-08, 2.0206109342515528e-08, 1.6145326542315516e-08, 1.3145835475667562e-08, 1.066066200355582e-08, 8.721177030186938e-09, 6.986938944359399e-09, 5.709575712135204e-09, 4.617719622016427e-09, 3.784316698814075e-09, 3.0612636155545596e-09, 2.5257097896469896e-09, 2.054262482850871e-09, 1.6597422333363001e-09, 1.3542344844458452e-09, 1.1108251651704766e-09, 9.018994284726423e-10, 7.370285196012103e-10, 5.983205741099708e-10, 4.944777593953665e-10, 3.9951558699172804e-10, 3.261428035107056e-10, 2.6769915395656193e-10, 2.164912171771086e-10, 1.710998441808013e-10, 1.4081504549528017e-10, 1.1013601488048966e-10, 8.630916262617975e-11, 6.715516473753416e-11, 5.0985802403880863e-11, 3.92192913419651e-11, 2.870249285275802e-11, 2.1306188928338948e-11, 1.515182992350807e-11, 1.0368072434691007e-11, 6.968279426270152e-12, 4.526140780727097e-12, 2.6862135232439466e-12, 1.5220349094233146e-12, 6.967180915527777e-13, 2.402602589304194e-13};
    MakeHistogram("Proton", "Proton energy spectrum", protonX, protonY)->Write();

    return 0;
}
